// <auto-generated />
using System;
using AndrecutEmanuelMedii.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AndrecutEmanuelMedii.Migrations
{
    [DbContext(typeof(AndrecutEmanuelMediiContext))]
    partial class AndrecutEmanuelMediiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AndrecutEmanuelMedii.Models.Facility", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Facility");
                });

            modelBuilder.Entity("AndrecutEmanuelMedii.Models.Train", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DepartureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DestinationTrainStationID")
                        .HasColumnType("int");

                    b.Property<string>("OperatingCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainStationID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DestinationTrainStationID");

                    b.HasIndex("TrainStationID");

                    b.ToTable("Train");
                });

            modelBuilder.Entity("AndrecutEmanuelMedii.Models.TrainStation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TrainStation");
                });

            modelBuilder.Entity("AndrecutEmanuelMedii.Models.Wagon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("FreeSeats")
                        .HasColumnType("decimal(3,0)");

                    b.Property<decimal>("TotalSeats")
                        .HasColumnType("decimal(3,0)");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TrainId");

                    b.ToTable("Wagon");
                });

            modelBuilder.Entity("FacilityWagon", b =>
                {
                    b.Property<int>("FacilitiesID")
                        .HasColumnType("int");

                    b.Property<int>("WagonsID")
                        .HasColumnType("int");

                    b.HasKey("FacilitiesID", "WagonsID");

                    b.HasIndex("WagonsID");

                    b.ToTable("FacilityWagon");
                });

            modelBuilder.Entity("AndrecutEmanuelMedii.Models.Train", b =>
                {
                    b.HasOne("AndrecutEmanuelMedii.Models.TrainStation", "DestinationTrainStation")
                        .WithMany("DestinationTrains")
                        .HasForeignKey("DestinationTrainStationID");

                    b.HasOne("AndrecutEmanuelMedii.Models.TrainStation", "TrainStation")
                        .WithMany("Trains")
                        .HasForeignKey("TrainStationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinationTrainStation");

                    b.Navigation("TrainStation");
                });

            modelBuilder.Entity("AndrecutEmanuelMedii.Models.Wagon", b =>
                {
                    b.HasOne("AndrecutEmanuelMedii.Models.Train", "Train")
                        .WithMany("Wagons")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("FacilityWagon", b =>
                {
                    b.HasOne("AndrecutEmanuelMedii.Models.Facility", null)
                        .WithMany()
                        .HasForeignKey("FacilitiesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AndrecutEmanuelMedii.Models.Wagon", null)
                        .WithMany()
                        .HasForeignKey("WagonsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AndrecutEmanuelMedii.Models.Train", b =>
                {
                    b.Navigation("Wagons");
                });

            modelBuilder.Entity("AndrecutEmanuelMedii.Models.TrainStation", b =>
                {
                    b.Navigation("DestinationTrains");

                    b.Navigation("Trains");
                });
#pragma warning restore 612, 618
        }
    }
}
